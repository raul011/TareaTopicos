// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TAREATOPICOS.ServicioA.Data;

#nullable disable

namespace ServicioA.Migrations
{
    [DbContext(typeof(ServicioAContext))]
    partial class ServicioAContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TAREATOPICOS.ServicioA.Models.Aula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacidad")
                        .HasColumnType("integer");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Aulas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacidad = 40,
                            Codigo = "A101",
                            Ubicacion = "Bloque A"
                        },
                        new
                        {
                            Id = 2,
                            Capacidad = 35,
                            Codigo = "B201",
                            Ubicacion = "Bloque B"
                        },
                        new
                        {
                            Id = 3,
                            Capacidad = 50,
                            Codigo = "C301",
                            Ubicacion = "Bloque C"
                        });
                });

            modelBuilder.Entity("TAREATOPICOS.ServicioA.Models.Carrera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Carreras");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Ingeniería de Sistemas"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Ingeniería Industrial"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Administración de Empresas"
                        });
                });

            modelBuilder.Entity("TAREATOPICOS.ServicioA.Models.DetalleInscripcion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("GrupoMateriaId")
                        .HasColumnType("integer");

                    b.Property<int>("InscripcionId")
                        .HasColumnType("integer");

                    b.Property<int?>("NotaFinal")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GrupoMateriaId");

                    b.HasIndex("InscripcionId", "GrupoMateriaId")
                        .IsUnique();

                    b.ToTable("DetallesInscripciones");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Codigo = "DET001",
                            Estado = "INSCRITO",
                            GrupoMateriaId = 1,
                            InscripcionId = 1
                        },
                        new
                        {
                            Id = 2,
                            Codigo = "DET002",
                            Estado = "INSCRITO",
                            GrupoMateriaId = 2,
                            InscripcionId = 2
                        });
                });

            modelBuilder.Entity("TAREATOPICOS.ServicioA.Models.Docente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Ci")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Registro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Docentes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ci = "123456",
                            Estado = "ACTIVO",
                            Nombre = "Juan Pérez",
                            Registro = "DOC001",
                            Telefono = "70011111"
                        },
                        new
                        {
                            Id = 2,
                            Ci = "789012",
                            Estado = "ACTIVO",
                            Nombre = "María Gómez",
                            Registro = "DOC002",
                            Telefono = "70022222"
                        });
                });

            modelBuilder.Entity("TAREATOPICOS.ServicioA.Models.Estudiante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CarreraId")
                        .HasColumnType("integer");

                    b.Property<string>("Ci")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Direccion")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Registro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CarreraId");

                    b.ToTable("Estudiantes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarreraId = 1,
                            Ci = "7894561",
                            Email = "carlos@uni.edu",
                            Estado = "ACTIVO",
                            Nombre = "Carlos Sánchez",
                            PasswordHash = "$2a$11$YP4gNElOt/d79qZIHbwT3eAxgSg8R.DkDofhZOnq2dH1/IytjKdSq",
                            Registro = "20251234"
                        },
                        new
                        {
                            Id = 2,
                            CarreraId = 2,
                            Ci = "222222",
                            Email = "ana@uni.edu",
                            Estado = "ACTIVO",
                            Nombre = "Ana Rodríguez",
                            PasswordHash = "$2a$11$YP4gNElOt/d79qZIHbwT3eAxgSg8R.DkDofhZOnq2dH1/IytjKdSq",
                            Registro = "EST002"
                        });
                });

            modelBuilder.Entity("TAREATOPICOS.ServicioA.Models.GrupoMateria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AulaId")
                        .HasColumnType("integer");

                    b.Property<int>("Cupo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<int>("DocenteId")
                        .HasColumnType("integer");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Grupo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("HorarioId")
                        .HasColumnType("integer");

                    b.Property<int>("MateriaId")
                        .HasColumnType("integer");

                    b.Property<int>("PeriodoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AulaId");

                    b.HasIndex("DocenteId");

                    b.HasIndex("HorarioId");

                    b.HasIndex("MateriaId");

                    b.HasIndex("PeriodoId");

                    b.ToTable("GruposMaterias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AulaId = 1,
                            Cupo = 40,
                            DocenteId = 1,
                            Estado = "ACTIVO",
                            Grupo = "A",
                            HorarioId = 1,
                            MateriaId = 1,
                            PeriodoId = 1
                        },
                        new
                        {
                            Id = 2,
                            AulaId = 2,
                            Cupo = 35,
                            DocenteId = 2,
                            Estado = "ACTIVO",
                            Grupo = "B",
                            HorarioId = 2,
                            MateriaId = 2,
                            PeriodoId = 1
                        });
                });

            modelBuilder.Entity("TAREATOPICOS.ServicioA.Models.HistorialAcademico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aprobado")
                        .HasColumnType("boolean");

                    b.Property<int>("DetalleInscripcionId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("FechaAprobacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Intento")
                        .HasColumnType("integer");

                    b.Property<decimal?>("UltimaNota")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("DetalleInscripcionId")
                        .IsUnique();

                    b.ToTable("HistorialesAcademicos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Aprobado = true,
                            DetalleInscripcionId = 1,
                            FechaAprobacion = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            Intento = 1,
                            UltimaNota = 85m
                        },
                        new
                        {
                            Id = 2,
                            Aprobado = false,
                            DetalleInscripcionId = 2,
                            FechaAprobacion = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            Intento = 1,
                            UltimaNota = 70m
                        });
                });

            modelBuilder.Entity("TAREATOPICOS.ServicioA.Models.Horario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Dia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<TimeOnly>("HoraFin")
                        .HasColumnType("time without time zone");

                    b.Property<TimeOnly>("HoraInicio")
                        .HasColumnType("time without time zone");

                    b.HasKey("Id");

                    b.ToTable("Horarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Dia = "Lunes",
                            HoraFin = new TimeOnly(10, 0, 0),
                            HoraInicio = new TimeOnly(8, 0, 0)
                        },
                        new
                        {
                            Id = 2,
                            Dia = "Martes",
                            HoraFin = new TimeOnly(12, 0, 0),
                            HoraInicio = new TimeOnly(10, 0, 0)
                        });
                });

            modelBuilder.Entity("TAREATOPICOS.ServicioA.Models.Inscripcion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EstudianteId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PeriodoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EstudianteId");

                    b.HasIndex("PeriodoId");

                    b.ToTable("Inscripciones");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Estado = "PENDIENTE",
                            EstudianteId = 1,
                            Fecha = new DateTime(2025, 2, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            PeriodoId = 1
                        },
                        new
                        {
                            Id = 2,
                            Estado = "PENDIENTE",
                            EstudianteId = 2,
                            Fecha = new DateTime(2025, 2, 6, 0, 0, 0, 0, DateTimeKind.Utc),
                            PeriodoId = 1
                        });
                });

            modelBuilder.Entity("TAREATOPICOS.ServicioA.Models.Materia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Creditos")
                        .HasColumnType("integer");

                    b.Property<int>("NivelId")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("NivelId");

                    b.ToTable("Materias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Codigo = "MAT101",
                            Creditos = 15,
                            NivelId = 1,
                            Nombre = "CALCULO I"
                        },
                        new
                        {
                            Id = 2,
                            Codigo = "INF119",
                            Creditos = 20,
                            NivelId = 1,
                            Nombre = "ESTRUCTURAS DISCRETAS"
                        },
                        new
                        {
                            Id = 3,
                            Codigo = "INF110",
                            Creditos = 20,
                            NivelId = 1,
                            Nombre = "INTRODUCCION A LA INFORMATICA"
                        },
                        new
                        {
                            Id = 4,
                            Codigo = "FIS100",
                            Creditos = 15,
                            NivelId = 1,
                            Nombre = "FISICA I"
                        },
                        new
                        {
                            Id = 5,
                            Codigo = "LIN100",
                            Creditos = 15,
                            NivelId = 1,
                            Nombre = "INGLES I"
                        },
                        new
                        {
                            Id = 6,
                            Codigo = "MAT102",
                            Creditos = 20,
                            NivelId = 2,
                            Nombre = "CALCULO II"
                        },
                        new
                        {
                            Id = 7,
                            Codigo = "MAT103",
                            Creditos = 20,
                            NivelId = 2,
                            Nombre = "ALGEBRA LINEAL"
                        },
                        new
                        {
                            Id = 8,
                            Codigo = "INF120",
                            Creditos = 20,
                            NivelId = 2,
                            Nombre = "PROGRAMACION I"
                        },
                        new
                        {
                            Id = 9,
                            Codigo = "FIS102",
                            Creditos = 20,
                            NivelId = 2,
                            Nombre = "FISICA II"
                        },
                        new
                        {
                            Id = 10,
                            Codigo = "LIN101",
                            Creditos = 20,
                            NivelId = 2,
                            Nombre = "INGLES II"
                        },
                        new
                        {
                            Id = 11,
                            Codigo = "MAT207",
                            Creditos = 20,
                            NivelId = 3,
                            Nombre = "ECUACIONES DIFERENCIALES"
                        },
                        new
                        {
                            Id = 12,
                            Codigo = "INF210",
                            Creditos = 20,
                            NivelId = 3,
                            Nombre = "PROGRAMACION II"
                        },
                        new
                        {
                            Id = 13,
                            Codigo = "INF211",
                            Creditos = 20,
                            NivelId = 3,
                            Nombre = "ARQUITECTURA DE COMPUTADORAS"
                        },
                        new
                        {
                            Id = 14,
                            Codigo = "FIS200",
                            Creditos = 20,
                            NivelId = 3,
                            Nombre = "FISICA III"
                        },
                        new
                        {
                            Id = 15,
                            Codigo = "ADM100",
                            Creditos = 20,
                            NivelId = 3,
                            Nombre = "ADMINISTRACION"
                        },
                        new
                        {
                            Id = 16,
                            Codigo = "MAT202",
                            Creditos = 20,
                            NivelId = 4,
                            Nombre = "PROBABILIDAD Y ESTADISTICA I"
                        },
                        new
                        {
                            Id = 17,
                            Codigo = "MAT205",
                            Creditos = 20,
                            NivelId = 4,
                            Nombre = "METODOS NUMERICOS"
                        },
                        new
                        {
                            Id = 18,
                            Codigo = "INF220",
                            Creditos = 20,
                            NivelId = 4,
                            Nombre = "ESTRUCTURA DE DATOS I"
                        },
                        new
                        {
                            Id = 19,
                            Codigo = "INF221",
                            Creditos = 20,
                            NivelId = 4,
                            Nombre = "PROGRAMACION ENSAMBLADOR"
                        },
                        new
                        {
                            Id = 20,
                            Codigo = "ADM200",
                            Creditos = 20,
                            NivelId = 4,
                            Nombre = "CONTABILIDAD"
                        },
                        new
                        {
                            Id = 21,
                            Codigo = "MAT302",
                            Creditos = 20,
                            NivelId = 5,
                            Nombre = "PROBABILIDAD Y ESTADISTICA II"
                        },
                        new
                        {
                            Id = 22,
                            Codigo = "INF318",
                            Creditos = 20,
                            NivelId = 5,
                            Nombre = "PROGRAMACION LOGICA Y FUNCIONAL"
                        },
                        new
                        {
                            Id = 23,
                            Codigo = "INF310",
                            Creditos = 20,
                            NivelId = 5,
                            Nombre = "ESTRUCTURA DE DATOS II"
                        },
                        new
                        {
                            Id = 24,
                            Codigo = "INF312",
                            Creditos = 20,
                            NivelId = 5,
                            Nombre = "BASE DE DATOS I"
                        },
                        new
                        {
                            Id = 25,
                            Codigo = "INF319",
                            Creditos = 20,
                            NivelId = 5,
                            Nombre = "LENGUAJES FORMALES"
                        });
                });

            modelBuilder.Entity("TAREATOPICOS.ServicioA.Models.Nivel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Numero")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Niveles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "1er Semestre",
                            Numero = 1
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "2do Semestre",
                            Numero = 2
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "3er Semestre",
                            Numero = 3
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "4to Semestre",
                            Numero = 4
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "5to Semestre",
                            Numero = 5
                        });
                });

            modelBuilder.Entity("TAREATOPICOS.ServicioA.Models.PeriodoAcademico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Gestion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PeriodosAcademicos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FechaFin = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            FechaInicio = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Gestion = "2025-1"
                        },
                        new
                        {
                            Id = 2,
                            FechaFin = new DateTime(2025, 12, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            FechaInicio = new DateTime(2025, 8, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Gestion = "2025-2"
                        });
                });

            modelBuilder.Entity("TAREATOPICOS.ServicioA.Models.PlanDeEstudio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CarreraId")
                        .HasColumnType("integer");

                    b.Property<string>("Codigo")
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CarreraId");

                    b.ToTable("PlanesEstudio");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarreraId = 1,
                            Codigo = "SIS25",
                            Estado = "ACTIVO",
                            Fecha = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Nombre = "Plan 2025"
                        },
                        new
                        {
                            Id = 2,
                            CarreraId = 2,
                            Codigo = "IND24",
                            Estado = "ACTIVO",
                            Fecha = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Nombre = "Plan 2024"
                        });
                });

            modelBuilder.Entity("TAREATOPICOS.ServicioA.Models.PlanMateria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("MateriaId")
                        .HasColumnType("integer");

                    b.Property<int>("PlanId")
                        .HasColumnType("integer");

                    b.Property<int>("Semestre")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MateriaId");

                    b.HasIndex("PlanId", "MateriaId")
                        .IsUnique();

                    b.ToTable("PlanMaterias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MateriaId = 1,
                            PlanId = 1,
                            Semestre = 1
                        },
                        new
                        {
                            Id = 2,
                            MateriaId = 2,
                            PlanId = 1,
                            Semestre = 1
                        },
                        new
                        {
                            Id = 3,
                            MateriaId = 3,
                            PlanId = 1,
                            Semestre = 2
                        });
                });

            modelBuilder.Entity("TAREATOPICOS.ServicioA.Models.Prerequisito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("MateriaId")
                        .HasColumnType("integer");

                    b.Property<int>("MateriaPrerequisitoId")
                        .HasColumnType("integer");

                    b.Property<decimal>("NotaMin")
                        .HasColumnType("numeric");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("MateriaPrerequisitoId");

                    b.HasIndex("MateriaId", "MateriaPrerequisitoId")
                        .IsUnique();

                    b.ToTable("Prerequisitos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MateriaId = 6,
                            MateriaPrerequisitoId = 1,
                            NotaMin = 51m,
                            Tipo = "OBLIGATORIO"
                        },
                        new
                        {
                            Id = 2,
                            MateriaId = 7,
                            MateriaPrerequisitoId = 2,
                            NotaMin = 51m,
                            Tipo = "OBLIGATORIO"
                        },
                        new
                        {
                            Id = 3,
                            MateriaId = 8,
                            MateriaPrerequisitoId = 3,
                            NotaMin = 51m,
                            Tipo = "OBLIGATORIO"
                        },
                        new
                        {
                            Id = 4,
                            MateriaId = 9,
                            MateriaPrerequisitoId = 4,
                            NotaMin = 51m,
                            Tipo = "OBLIGATORIO"
                        },
                        new
                        {
                            Id = 5,
                            MateriaId = 10,
                            MateriaPrerequisitoId = 5,
                            NotaMin = 51m,
                            Tipo = "OBLIGATORIO"
                        },
                        new
                        {
                            Id = 6,
                            MateriaId = 11,
                            MateriaPrerequisitoId = 6,
                            NotaMin = 51m,
                            Tipo = "OBLIGATORIO"
                        },
                        new
                        {
                            Id = 7,
                            MateriaId = 12,
                            MateriaPrerequisitoId = 7,
                            NotaMin = 51m,
                            Tipo = "OBLIGATORIO"
                        },
                        new
                        {
                            Id = 8,
                            MateriaId = 12,
                            MateriaPrerequisitoId = 8,
                            NotaMin = 51m,
                            Tipo = "OBLIGATORIO"
                        },
                        new
                        {
                            Id = 9,
                            MateriaId = 13,
                            MateriaPrerequisitoId = 8,
                            NotaMin = 51m,
                            Tipo = "OBLIGATORIO"
                        },
                        new
                        {
                            Id = 10,
                            MateriaId = 13,
                            MateriaPrerequisitoId = 9,
                            NotaMin = 51m,
                            Tipo = "OBLIGATORIO"
                        },
                        new
                        {
                            Id = 11,
                            MateriaId = 14,
                            MateriaPrerequisitoId = 9,
                            NotaMin = 51m,
                            Tipo = "OBLIGATORIO"
                        },
                        new
                        {
                            Id = 12,
                            MateriaId = 16,
                            MateriaPrerequisitoId = 6,
                            NotaMin = 51m,
                            Tipo = "OBLIGATORIO"
                        },
                        new
                        {
                            Id = 13,
                            MateriaId = 17,
                            MateriaPrerequisitoId = 11,
                            NotaMin = 51m,
                            Tipo = "OBLIGATORIO"
                        },
                        new
                        {
                            Id = 14,
                            MateriaId = 18,
                            MateriaPrerequisitoId = 12,
                            NotaMin = 51m,
                            Tipo = "OBLIGATORIO"
                        },
                        new
                        {
                            Id = 15,
                            MateriaId = 19,
                            MateriaPrerequisitoId = 13,
                            NotaMin = 51m,
                            Tipo = "OBLIGATORIO"
                        },
                        new
                        {
                            Id = 16,
                            MateriaId = 20,
                            MateriaPrerequisitoId = 15,
                            NotaMin = 51m,
                            Tipo = "OBLIGATORIO"
                        },
                        new
                        {
                            Id = 17,
                            MateriaId = 21,
                            MateriaPrerequisitoId = 16,
                            NotaMin = 51m,
                            Tipo = "OBLIGATORIO"
                        },
                        new
                        {
                            Id = 18,
                            MateriaId = 22,
                            MateriaPrerequisitoId = 18,
                            NotaMin = 51m,
                            Tipo = "OBLIGATORIO"
                        },
                        new
                        {
                            Id = 19,
                            MateriaId = 23,
                            MateriaPrerequisitoId = 18,
                            NotaMin = 51m,
                            Tipo = "OBLIGATORIO"
                        },
                        new
                        {
                            Id = 20,
                            MateriaId = 24,
                            MateriaPrerequisitoId = 18,
                            NotaMin = 51m,
                            Tipo = "OBLIGATORIO"
                        },
                        new
                        {
                            Id = 21,
                            MateriaId = 25,
                            MateriaPrerequisitoId = 18,
                            NotaMin = 51m,
                            Tipo = "OBLIGATORIO"
                        });
                });

            modelBuilder.Entity("TAREATOPICOS.ServicioA.Models.DetalleInscripcion", b =>
                {
                    b.HasOne("TAREATOPICOS.ServicioA.Models.GrupoMateria", "GrupoMateria")
                        .WithMany("DetallesInscripcion")
                        .HasForeignKey("GrupoMateriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TAREATOPICOS.ServicioA.Models.Inscripcion", "Inscripcion")
                        .WithMany("Detalles")
                        .HasForeignKey("InscripcionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GrupoMateria");

                    b.Navigation("Inscripcion");
                });

            modelBuilder.Entity("TAREATOPICOS.ServicioA.Models.Estudiante", b =>
                {
                    b.HasOne("TAREATOPICOS.ServicioA.Models.Carrera", "Carrera")
                        .WithMany("Estudiantes")
                        .HasForeignKey("CarreraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrera");
                });

            modelBuilder.Entity("TAREATOPICOS.ServicioA.Models.GrupoMateria", b =>
                {
                    b.HasOne("TAREATOPICOS.ServicioA.Models.Aula", "Aula")
                        .WithMany("Grupos")
                        .HasForeignKey("AulaId");

                    b.HasOne("TAREATOPICOS.ServicioA.Models.Docente", "Docente")
                        .WithMany("Grupos")
                        .HasForeignKey("DocenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TAREATOPICOS.ServicioA.Models.Horario", "Horario")
                        .WithMany("Grupos")
                        .HasForeignKey("HorarioId");

                    b.HasOne("TAREATOPICOS.ServicioA.Models.Materia", "Materia")
                        .WithMany("Grupos")
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TAREATOPICOS.ServicioA.Models.PeriodoAcademico", "Periodo")
                        .WithMany("Grupos")
                        .HasForeignKey("PeriodoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aula");

                    b.Navigation("Docente");

                    b.Navigation("Horario");

                    b.Navigation("Materia");

                    b.Navigation("Periodo");
                });

            modelBuilder.Entity("TAREATOPICOS.ServicioA.Models.HistorialAcademico", b =>
                {
                    b.HasOne("TAREATOPICOS.ServicioA.Models.DetalleInscripcion", "DetalleInscripcion")
                        .WithOne("HistorialAcademico")
                        .HasForeignKey("TAREATOPICOS.ServicioA.Models.HistorialAcademico", "DetalleInscripcionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DetalleInscripcion");
                });

            modelBuilder.Entity("TAREATOPICOS.ServicioA.Models.Inscripcion", b =>
                {
                    b.HasOne("TAREATOPICOS.ServicioA.Models.Estudiante", "Estudiante")
                        .WithMany("Inscripciones")
                        .HasForeignKey("EstudianteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TAREATOPICOS.ServicioA.Models.PeriodoAcademico", "Periodo")
                        .WithMany("Inscripciones")
                        .HasForeignKey("PeriodoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estudiante");

                    b.Navigation("Periodo");
                });

            modelBuilder.Entity("TAREATOPICOS.ServicioA.Models.Materia", b =>
                {
                    b.HasOne("TAREATOPICOS.ServicioA.Models.Nivel", "Nivel")
                        .WithMany("Materias")
                        .HasForeignKey("NivelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nivel");
                });

            modelBuilder.Entity("TAREATOPICOS.ServicioA.Models.PlanDeEstudio", b =>
                {
                    b.HasOne("TAREATOPICOS.ServicioA.Models.Carrera", "Carrera")
                        .WithMany("PlanesDeEstudio")
                        .HasForeignKey("CarreraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrera");
                });

            modelBuilder.Entity("TAREATOPICOS.ServicioA.Models.PlanMateria", b =>
                {
                    b.HasOne("TAREATOPICOS.ServicioA.Models.Materia", "Materia")
                        .WithMany("PlanesMaterias")
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TAREATOPICOS.ServicioA.Models.PlanDeEstudio", "Plan")
                        .WithMany("PlanesMaterias")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Materia");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("TAREATOPICOS.ServicioA.Models.Prerequisito", b =>
                {
                    b.HasOne("TAREATOPICOS.ServicioA.Models.Materia", "Materia")
                        .WithMany("MateriaRequeridaPor")
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TAREATOPICOS.ServicioA.Models.Materia", "MateriaPrerequisito")
                        .WithMany("RequiereMaterias")
                        .HasForeignKey("MateriaPrerequisitoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Materia");

                    b.Navigation("MateriaPrerequisito");
                });

            modelBuilder.Entity("TAREATOPICOS.ServicioA.Models.Aula", b =>
                {
                    b.Navigation("Grupos");
                });

            modelBuilder.Entity("TAREATOPICOS.ServicioA.Models.Carrera", b =>
                {
                    b.Navigation("Estudiantes");

                    b.Navigation("PlanesDeEstudio");
                });

            modelBuilder.Entity("TAREATOPICOS.ServicioA.Models.DetalleInscripcion", b =>
                {
                    b.Navigation("HistorialAcademico");
                });

            modelBuilder.Entity("TAREATOPICOS.ServicioA.Models.Docente", b =>
                {
                    b.Navigation("Grupos");
                });

            modelBuilder.Entity("TAREATOPICOS.ServicioA.Models.Estudiante", b =>
                {
                    b.Navigation("Inscripciones");
                });

            modelBuilder.Entity("TAREATOPICOS.ServicioA.Models.GrupoMateria", b =>
                {
                    b.Navigation("DetallesInscripcion");
                });

            modelBuilder.Entity("TAREATOPICOS.ServicioA.Models.Horario", b =>
                {
                    b.Navigation("Grupos");
                });

            modelBuilder.Entity("TAREATOPICOS.ServicioA.Models.Inscripcion", b =>
                {
                    b.Navigation("Detalles");
                });

            modelBuilder.Entity("TAREATOPICOS.ServicioA.Models.Materia", b =>
                {
                    b.Navigation("Grupos");

                    b.Navigation("MateriaRequeridaPor");

                    b.Navigation("PlanesMaterias");

                    b.Navigation("RequiereMaterias");
                });

            modelBuilder.Entity("TAREATOPICOS.ServicioA.Models.Nivel", b =>
                {
                    b.Navigation("Materias");
                });

            modelBuilder.Entity("TAREATOPICOS.ServicioA.Models.PeriodoAcademico", b =>
                {
                    b.Navigation("Grupos");

                    b.Navigation("Inscripciones");
                });

            modelBuilder.Entity("TAREATOPICOS.ServicioA.Models.PlanDeEstudio", b =>
                {
                    b.Navigation("PlanesMaterias");
                });
#pragma warning restore 612, 618
        }
    }
}
